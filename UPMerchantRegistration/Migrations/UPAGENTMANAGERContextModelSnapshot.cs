// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using UPMerchantRegistration;

namespace UPMerchantRegistration.Migrations
{
    [DbContext(typeof(UPAGENTMANAGERContext))]
    partial class UPAGENTMANAGERContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("Relational:Sequence:.agent_lga_id_seq", "'agent_lga_id_seq', '', '1', '1', '', '', 'Int32', 'False'");

            modelBuilder.Entity("UPMerchantRegistration.Acctype", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Accounttype")
                        .HasColumnName("accounttype")
                        .HasMaxLength(512);

                    b.HasKey("Id");

                    b.ToTable("acctype");
                });

            modelBuilder.Entity("UPMerchantRegistration.Agentlga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasDefaultValueSql("nextval('agent_lga_id_seq'::regclass)");

                    b.Property<string>("Agentid")
                        .IsRequired()
                        .HasColumnName("agentid")
                        .HasMaxLength(255);

                    b.Property<string>("Lga10id")
                        .HasColumnName("lga10id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga1id")
                        .IsRequired()
                        .HasColumnName("lga1id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga2id")
                        .HasColumnName("lga2id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga3id")
                        .HasColumnName("lga3id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga4id")
                        .HasColumnName("lga4id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga5id")
                        .HasColumnName("lga5id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga6id")
                        .HasColumnName("lga6id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga7id")
                        .HasColumnName("lga7id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga8id")
                        .HasColumnName("lga8id")
                        .HasMaxLength(255);

                    b.Property<string>("Lga9id")
                        .HasColumnName("lga9id")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("agentlga");
                });

            modelBuilder.Entity("UPMerchantRegistration.Businessproprietors", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(255);

                    b.Property<int?>("Agentid")
                        .HasColumnName("agentid");

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasMaxLength(255);

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(255);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasMaxLength(255);

                    b.Property<int?>("Lgaid")
                        .HasColumnName("lgaid");

                    b.Property<string>("Middlename")
                        .HasColumnName("middlename")
                        .HasMaxLength(255);

                    b.Property<string>("Phonenumber")
                        .HasColumnName("phonenumber")
                        .HasMaxLength(255);

                    b.Property<int?>("Stateid")
                        .HasColumnName("stateid");

                    b.HasKey("Id");

                    b.HasIndex("Agentid");

                    b.HasIndex("Lgaid");

                    b.HasIndex("Stateid");

                    b.ToTable("businessproprietors");
                });

            modelBuilder.Entity("UPMerchantRegistration.Companyshareholders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Address")
                        .HasColumnName("address")
                        .HasMaxLength(255);

                    b.Property<int?>("Agentid")
                        .HasColumnName("agentid");

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasMaxLength(255);

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(255);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasMaxLength(255);

                    b.Property<int?>("Lgaid")
                        .HasColumnName("lgaid");

                    b.Property<string>("Middlename")
                        .HasColumnName("middlename")
                        .HasMaxLength(255);

                    b.Property<string>("Phonenumber")
                        .HasColumnName("phonenumber")
                        .HasMaxLength(255);

                    b.Property<int?>("Stateid")
                        .HasColumnName("stateid");

                    b.HasKey("Id");

                    b.HasIndex("Lgaid");

                    b.HasIndex("Stateid");

                    b.ToTable("companyshareholders");
                });

            modelBuilder.Entity("UPMerchantRegistration.Lga", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Lganame")
                        .HasColumnName("lganame")
                        .HasMaxLength(255);

                    b.Property<int?>("Stateid")
                        .HasColumnName("stateid");

                    b.HasKey("Id");

                    b.HasIndex("Stateid");

                    b.ToTable("lga");
                });

            modelBuilder.Entity("UPMerchantRegistration.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<string>("Statecode")
                        .IsRequired()
                        .HasColumnName("statecode")
                        .HasMaxLength(255);

                    b.Property<string>("Statename")
                        .IsRequired()
                        .HasColumnName("statename")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.ToTable("state");
                });

            modelBuilder.Entity("UPMerchantRegistration.Upagent", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id");

                    b.Property<int?>("Acctypeid")
                        .HasColumnName("acctypeid");

                    b.Property<string>("Businessemail")
                        .HasColumnName("businessemail")
                        .HasMaxLength(255);

                    b.Property<string>("Businessname")
                        .HasColumnName("businessname")
                        .HasMaxLength(255);

                    b.Property<string>("Businessphone")
                        .HasColumnName("businessphone")
                        .HasMaxLength(255);

                    b.Property<int?>("Deslgaid")
                        .HasColumnName("deslgaid");

                    b.Property<int?>("Desstateid")
                        .HasColumnName("desstateid");

                    b.Property<string>("Firstname")
                        .HasColumnName("firstname")
                        .HasMaxLength(255);

                    b.Property<string>("Gender")
                        .HasColumnName("gender")
                        .HasMaxLength(255);

                    b.Property<string>("Homeaddress")
                        .HasColumnName("homeaddress")
                        .HasMaxLength(255);

                    b.Property<string>("Lastname")
                        .HasColumnName("lastname")
                        .HasMaxLength(255);

                    b.Property<int?>("Lgaid")
                        .HasColumnName("lgaid");

                    b.Property<string>("Middlename")
                        .HasColumnName("middlename")
                        .HasMaxLength(255);

                    b.Property<string>("Natureofbusiness")
                        .IsRequired()
                        .HasColumnName("natureofbusiness")
                        .HasMaxLength(255);

                    b.Property<string>("Noofbusinessyears")
                        .HasColumnName("noofbusinessyears")
                        .HasMaxLength(255);

                    b.Property<string>("Noofproprietors")
                        .HasColumnName("noofproprietors")
                        .HasMaxLength(255);

                    b.Property<string>("Noofshareholders")
                        .HasColumnName("noofshareholders")
                        .HasMaxLength(255);

                    b.Property<string>("Officeaddress")
                        .HasColumnName("officeaddress")
                        .HasMaxLength(255);

                    b.Property<int?>("Officelgaid")
                        .HasColumnName("officelgaid");

                    b.Property<int?>("Officestateid")
                        .HasColumnName("officestateid");

                    b.Property<string>("Phonenumber")
                        .HasColumnName("phonenumber")
                        .HasMaxLength(11);

                    b.Property<string>("Profitbeforetax")
                        .HasColumnName("profitbeforetax")
                        .HasMaxLength(255);

                    b.Property<string>("Rcnumber")
                        .HasColumnName("rcnumber")
                        .HasMaxLength(255);

                    b.Property<int?>("Stateid")
                        .HasColumnName("stateid");

                    b.Property<string>("Turnover")
                        .HasColumnName("turnover")
                        .HasMaxLength(255);

                    b.HasKey("Id");

                    b.HasIndex("Acctypeid");

                    b.HasIndex("Lgaid");

                    b.HasIndex("Officelgaid");

                    b.HasIndex("Officestateid");

                    b.HasIndex("Stateid");

                    b.ToTable("upagent");
                });

            modelBuilder.Entity("UPMerchantRegistration.Businessproprietors", b =>
                {
                    b.HasOne("UPMerchantRegistration.Upagent", "Agent")
                        .WithMany("Businessproprietors")
                        .HasForeignKey("Agentid")
                        .HasConstraintName("bus_props_agent_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UPMerchantRegistration.Lga", "Lga")
                        .WithMany("Businessproprietors")
                        .HasForeignKey("Lgaid")
                        .HasConstraintName("bus_props_lga_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UPMerchantRegistration.State", "State")
                        .WithMany("Businessproprietors")
                        .HasForeignKey("Stateid")
                        .HasConstraintName("bus_props_state_fk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPMerchantRegistration.Companyshareholders", b =>
                {
                    b.HasOne("UPMerchantRegistration.Lga", "Lga")
                        .WithMany("Companyshareholders")
                        .HasForeignKey("Lgaid")
                        .HasConstraintName("bus_props_lga_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UPMerchantRegistration.State", "State")
                        .WithMany("Companyshareholders")
                        .HasForeignKey("Stateid")
                        .HasConstraintName("comp_shldrs_state_fk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPMerchantRegistration.Lga", b =>
                {
                    b.HasOne("UPMerchantRegistration.State", "State")
                        .WithMany("Lga")
                        .HasForeignKey("Stateid")
                        .HasConstraintName("lg_state_fk")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("UPMerchantRegistration.Upagent", b =>
                {
                    b.HasOne("UPMerchantRegistration.Acctype", "Acctype")
                        .WithMany("Upagent")
                        .HasForeignKey("Acctypeid")
                        .HasConstraintName("acctype_accs_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UPMerchantRegistration.Lga", "Lga")
                        .WithMany("UpagentLga")
                        .HasForeignKey("Lgaid")
                        .HasConstraintName("agent_lga_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UPMerchantRegistration.Lga", "Officelga")
                        .WithMany("UpagentOfficelga")
                        .HasForeignKey("Officelgaid")
                        .HasConstraintName("des_lga_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UPMerchantRegistration.State", "Officestate")
                        .WithMany("UpagentOfficestate")
                        .HasForeignKey("Officestateid")
                        .HasConstraintName("des_state_fk")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("UPMerchantRegistration.State", "State")
                        .WithMany("UpagentState")
                        .HasForeignKey("Stateid")
                        .HasConstraintName("agent_state_fk")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
